/* Variables */
@import './settings';

$color-shade-amount: 10%;
$color-shader-amount: 20%;
$color-trans-amount: 0.5;

$colors: ();

@each $code, $color in $color-map {
  $color-variants: (
    $code: (
      base: $color,
      light: lighten($color, $color-shade-amount),
      lighter: lighten($color, $color-shader-amount),
      dark: darken($color, $color-shade-amount),
      darker: darken($color, $color-shader-amount),
      trans: transparentize($color, $color-trans-amount)
    )
  );
  $colors: map-merge($colors, $color-variants);
}

/* This colors will NOT have a base, light, dark, and trans variants */
$obligatory-colors: (
  light: #ffffff
);

$colors: map-merge($colors, $obligatory-colors);

/*------------------------
mixin that calculates if text needs to be light or dark
depending on the background color passed.

From this W3C document: http://www.webmasterworld.com/r.cgi?f=88&d=9769&url=http://www.w3.org/TR/AERT#color-contrast

Color brightness is determined by the following formula:
((Red value X 299) + (Green value X 587) + (Blue value X 114)) / 1000
------------------------*/

@function color-contrast($bg-color) {
  $color-brightness: round(
    (red($bg-color) * 299) + (green($bg-color) * 587) + (blue($bg-color) * 114) /
      1000
  );
  $light-color: round(
    (red(#ffffff) * 299) + (green(#ffffff) * 587) + (blue(#ffffff) * 114) / 1000
  );

  @if abs($color-brightness) < ($light-color / 2) {
    @return color(light);
  } @else {
    @return color(neutral, base);
  }
}

/* Generate all the color classes (see css file output) */
@each $code, $color in $colors {
  @if type-of($color) == 'map' {
    @each $colorVariant, $colorCode in $color {
      .color-#{$code}-#{$colorVariant} {
        color: map-get($color, $colorVariant);
      }
      .bg-#{$code}-#{$colorVariant} {
        background-color: map-get($color, $colorVariant);
        color: color-contrast(map-get($color, $colorVariant));
      }
    }
  } @else {
    .color-#{$code} {
      color: $color;
    }
    .bg-#{$code} {
      background-color: $color;
      color: color-contrast($color);
    }
  }
}

/* Color function to use on other scss files */
@function color($color-name, $color-variant: null) {
  @if ($color-variant == null) {
    @return map-get($colors, $color-name);
  }
  @if (map-get($colors, $color-name) != null) {
    @return map-get(map-get($colors, $color-name), $color-variant);
  }
}
